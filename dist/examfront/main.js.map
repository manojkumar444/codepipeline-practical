{"version":3,"sources":["./src/app/pages/admin/sidebar/sidebar.component.ts","./src/app/pages/admin/sidebar/sidebar.component.html","./src/app/pages/admin/add-question/add-question.component.ts","./src/app/pages/admin/add-question/add-question.component.html","./src/app/pages/user/instructions/instructions.component.ts","./src/app/pages/user/instructions/instructions.component.html","./src/app/pages/home/home.component.ts","./src/app/pages/home/home.component.html","./src/app/pages/user/load-quiz/load-quiz.component.html","./src/app/pages/user/load-quiz/load-quiz.component.ts","./src/app/pages/admin/add-quiz/add-quiz.component.ts","./src/app/pages/admin/add-quiz/add-quiz.component.html","./src/app/services/auth.interceptor.ts","./src/environments/environment.ts","./src/app/pages/login/login.component.ts","./src/app/pages/login/login.component.html","./src/app/services/login.service.ts","./src/app/components/footer/footer.component.ts","./src/app/components/footer/footer.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/question.service.ts","./src/app/pages/admin/add-category/add-category.component.ts","./src/app/pages/admin/add-category/add-category.component.html","./src/app/services/normal.guard.ts","./src/app/pages/profile/profile.component.html","./src/app/pages/profile/profile.component.ts","./src/app/app.module.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.ts","./src/app/pages/user/user-dashboard/user-dashboard.component.html","./src/app/pages/admin/welcome/welcome.component.ts","./src/app/pages/admin/welcome/welcome.component.html","./src/app/services/category.service.ts","./src/app/pages/admin/view-categories/view-categories.component.ts","./src/app/pages/admin/view-categories/view-categories.component.html","./src/app/services/admin.guard.ts","./src/app/components/navbar/navbar.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/pages/user/sidebar/sidebar.component.html","./src/app/pages/user/sidebar/sidebar.component.ts","./src/app/pages/admin/update-quiz/update-quiz.component.ts","./src/app/pages/admin/update-quiz/update-quiz.component.html","./src/app/services/helper.ts","./src/app/pages/signup/signup.component.ts","./src/app/pages/signup/signup.component.html","./src/app/services/quiz.service.ts","./src/app/services/user.service.ts","./src/app/pages/admin/dashboard/dashboard.component.ts","./src/app/pages/admin/dashboard/dashboard.component.html","./src/app/pages/user/start/start.component.ts","./src/app/pages/user/start/start.component.html","./src/app/pages/admin/view-quizzes/view-quizzes.component.ts","./src/app/pages/admin/view-quizzes/view-quizzes.component.html","./src/app/app-routing.module.ts","./src/app/pages/admin/view-quiz-questions/view-quiz-questions.component.ts","./src/app/pages/admin/view-quiz-questions/view-quiz-questions.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-card>\n  <mat-action-list>\n    <div mat-subheader>Menu</div>\n    <button routerLink=\"/admin\" mat-list-item>\n      <mat-icon mat-list-icon>home</mat-icon> Home\n    </button>\n    <button mat-list-item routerLink=\"/admin/profile\">\n      <mat-icon mat-list-icon>account_circle</mat-icon> Profile\n    </button>\n    <button mat-list-item routerLink=\"/admin/categories\">\n      <mat-icon mat-list-icon>list</mat-icon> Categories\n    </button>\n    <button mat-list-item routerLink=\"/admin/add-category\">\n      <mat-icon mat-list-icon>add_circle_outline</mat-icon> Add Categories\n    </button>\n    <button mat-list-item routerLink=\"/admin/quizzes\">\n      <mat-icon mat-list-icon>quiz</mat-icon> Quizzes\n    </button>\n    <button mat-list-item routerLink=\"/admin/add-quiz\">\n      <mat-icon mat-list-icon>add</mat-icon> Add Quiz\n    </button>\n    <button mat-list-item routerLink=\"/admin/profile\">\n      <mat-icon mat-list-icon>logout</mat-icon> Logout\n    </button>\n  </mat-action-list>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\nimport * as ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\n@Component({\n  selector: 'app-add-question',\n  templateUrl: './add-question.component.html',\n  styleUrls: ['./add-question.component.css'],\n})\nexport class AddQuestionComponent implements OnInit {\n  public Editor = ClassicEditor;\n  qId;\n  qTitle;\n  question = {\n    quiz: {},\n    content: '',\n    option1: '',\n    option2: '',\n    option3: '',\n    option4: '',\n    answer: '',\n  };\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _question: QuestionService\n  ) {}\n\n  ngOnInit(): void {\n    this.qId = this._route.snapshot.params.qid;\n    this.qTitle = this._route.snapshot.params.title;\n    this.question.quiz['qId'] = this.qId;\n  }\n\n  formSubmit() {\n    if (this.question.content.trim() == '' || this.question.content == null) {\n      return;\n    }\n\n    if (this.question.option1.trim() == '' || this.question.option1 == null) {\n      return;\n    }\n    if (this.question.option2.trim() == '' || this.question.option2 == null) {\n      return;\n    }\n    if (this.question.answer.trim() == '' || this.question.answer == null) {\n      return;\n    }\n\n    //form submit\n    this._question.addQuestion(this.question).subscribe(\n      (data: any) => {\n        Swal.fire('Success ', 'Question Added. Add Another one', 'success');\n        this.question.content = '';\n        this.question.option1 = '';\n        this.question.option2 = '';\n        this.question.option3 = '';\n        this.question.option4 = '';\n        this.question.answer = '';\n      },\n      (error) => {\n        Swal.fire('Error', 'Error in adding question', 'error');\n      }\n    );\n  }\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"row mt20\">\n    <div class=\"col-md-12\">\n      <h1>\n        Add Question to <span style=\"font-weight: bold\">{{ qTitle }}</span>\n      </h1>\n\n      <mat-card>\n        <mat-card-header>\n          <mat-card-subtitle>\n            Enter the detail of the new question\n          </mat-card-subtitle>\n        </mat-card-header>\n        <mat-card-content>\n          <form class=\"mt20\" (submit)=\"formSubmit()\">\n            <!-- content field -->\n\n            <!-- <mat-form-field class=\"w100\">\n              <mat-label>Write question content</mat-label>\n              <textarea\n                required\n                rows=\"8\"\n                [(ngModel)]=\"question.content\"\n                name=\"content\"\n                matInput\n                placeholder=\"Enter here\"\n              ></textarea>\n            </mat-form-field> -->\n\n            <ckeditor\n              [editor]=\"Editor\"\n              name=\"content\"\n              [(ngModel)]=\"question.content\"\n            ></ckeditor>\n\n            <!-- options -->\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <!-- option1 -->\n\n                <mat-form-field class=\"w100\">\n                  <mat-label>Enter Option1</mat-label>\n                  <input\n                    required\n                    [(ngModel)]=\"question.option1\"\n                    name=\"option1\"\n                    type=\"text\"\n                    matInput\n                  />\n                </mat-form-field>\n              </div>\n              <div class=\"col-md-6\">\n                <!-- option2 -->\n                <mat-form-field class=\"w100\">\n                  <mat-label>Enter Option2</mat-label>\n                  <input\n                    required\n                    [(ngModel)]=\"question.option2\"\n                    name=\"option2\"\n                    type=\"text\"\n                    matInput\n                  />\n                </mat-form-field>\n              </div>\n            </div>\n\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <!-- option3 -->\n                <mat-form-field class=\"w100\">\n                  <mat-label>Enter Option3</mat-label>\n                  <input\n                    [(ngModel)]=\"question.option3\"\n                    name=\"option3\"\n                    type=\"text\"\n                    matInput\n                  />\n                </mat-form-field>\n              </div>\n              <div class=\"col-md-6\">\n                <!-- option4 -->\n                <mat-form-field class=\"w100\">\n                  <mat-label>Enter Option4</mat-label>\n                  <input\n                    [(ngModel)]=\"question.option4\"\n                    name=\"option4\"\n                    type=\"text\"\n                    matInput\n                  />\n                </mat-form-field>\n              </div>\n            </div>\n\n            <!-- answer -->\n            <mat-form-field class=\"w100\">\n              <mat-label>Select Answer</mat-label>\n              <mat-select required [(ngModel)]=\"question.answer\" name=\"answer\">\n                <mat-option\n                  *ngIf=\"question.option1\"\n                  [value]=\"question.option1\"\n                  >{{ question.option1 }}</mat-option\n                >\n                <mat-option\n                  *ngIf=\"question.option2\"\n                  [value]=\"question.option2\"\n                  >{{ question.option2 }}</mat-option\n                >\n                <mat-option\n                  *ngIf=\"question.option3\"\n                  [value]=\"question.option3\"\n                  >{{ question.option3 }}</mat-option\n                >\n                <mat-option\n                  *ngIf=\"question.option4\"\n                  [value]=\"question.option4\"\n                  >{{ question.option4 }}</mat-option\n                >\n              </mat-select>\n            </mat-form-field>\n\n            <div class=\"container text-center\">\n              <button mat-raised-button color=\"warn\">Add</button>\n            </div>\n          </form>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</div>\n\n<!-- {{ question | json }} -->\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-instructions',\n  templateUrl: './instructions.component.html',\n  styleUrls: ['./instructions.component.css'],\n})\nexport class InstructionsComponent implements OnInit {\n  qid;\n  quiz;\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _quiz: QuizService,\n    private _router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.qid = this._route.snapshot.params.qid;\n    // console.log(this.qid);\n\n    this._quiz.getQuiz(this.qid).subscribe(\n      (data: any) => {\n        // console.log(data);\n        this.quiz = data;\n      },\n      (error) => {\n        console.log(error);\n        alert('Error in loading quiz data');\n      }\n    );\n  }\n\n  startQuiz() {\n    Swal.fire({\n      title: 'Do you want to start the quiz?',\n\n      showCancelButton: true,\n      confirmButtonText: `Start`,\n      denyButtonText: `Don't save`,\n      icon: 'info',\n    }).then((result) => {\n      /* Read more about isConfirmed, isDenied below */\n      if (result.isConfirmed) {\n        this._router.navigate(['/start/' + this.qid]);\n      } else if (result.isDenied) {\n        Swal.fire('Changes are not saved', '', 'info');\n      }\n    });\n  }\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <mat-card class=\"mt20\">\n          <mat-card-header>\n            <!-- heading -->\n            <mat-card-title>\n              Read the instructions of this page carefully\n            </mat-card-title>\n            <mat-card-subtitle> One step more to go </mat-card-subtitle>\n          </mat-card-header>\n\n          <mat-card-content class=\"ml20\">\n            <!-- content  -->\n\n            <h1>{{ quiz.title }}</h1>\n            <p>{{ quiz.description }}</p>\n\n            <mat-divider></mat-divider>\n            <br />\n            <h1>Important Instructions</h1>\n\n            <ul>\n              <li>This quiz is only for practice purpose.</li>\n\n              <!-- Let the time of each questions is  2 minutes -->\n              <li>\n                You have to submit quiz with in\n                <b> {{ quiz.numberOfQuestions * 2 }} Minutes.</b>\n              </li>\n              <li>You can attempt the quiz any number of time .</li>\n              <li>\n                There are <b>{{ quiz.numberOfQuestions }} questions</b> in this\n                quiz.\n              </li>\n              <li>\n                Each questions carries\n                <b>{{ quiz.maxMarks / quiz.numberOfQuestions }} marks</b>. No\n                negative marking for wrong ones.\n              </li>\n              <li>All questions is of MCQ Types.</li>\n            </ul>\n\n            <mat-divider></mat-divider>\n            <br />\n            <h1>Attempting Quiz</h1>\n            <ul>\n              <li>Click <b>Start Quiz</b> button to start the quiz</li>\n              <li>\n                The time will start the moment you click the Start Test button.\n              </li>\n              <li>\n                You can not resume this quiz, if interrupted due to any reason.\n              </li>\n              <li>Scroll downl to move to next question.</li>\n              <li>Click on Submit Quiz button on completion of the quiz.</li>\n              <li>\n                Report of the test is automatically generated in the form of PDF\n                copy\n              </li>\n            </ul>\n          </mat-card-content>\n          <mat-card-actions class=\"text-center\">\n            <!-- actions -->\n            <button\n              (click)=\"startQuiz()\"\n              class=\"\"\n              mat-raised-button\n              color=\"primary\"\n            >\n              Start QUIZ\n            </button>\n          </mat-card-actions>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container\">\n    <div class=\"row mt20\">\n      <div class=\"col-md-6 offset-md-3 text-center\">\n        <h1>Welcome to Examportal</h1>\n        <button mat-raised-button color=\"warn\">Home Page</button>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container-fluid\">\n    <h1 class=\"mt20\">Available Quizzes</h1>\n    <div class=\"row mt20\" *ngIf=\"quizzes\">\n      <div class=\"col-md-4\" *ngFor=\"let q of quizzes\">\n        <mat-card class=\"mb20\">\n          <mat-card-header>\n            <div mat-card-avatar class=\"example-header-image\"></div>\n            <mat-card-title>\n              {{ q.title }}\n            </mat-card-title>\n            <mat-card-subtitle>\n              {{ q.category.title }}\n            </mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-content>\n            <p class=\"truncate\">{{ q.description }}</p>\n          </mat-card-content>\n          <mat-card-action>\n            <button mat-button color=\"primary\">View</button>\n            <button\n              mat-button\n              color=\"warn\"\n              [routerLink]=\"'/user-dashboard/instructions/' + q.qId\"\n              class=\"ml10\"\n            >\n              Start\n            </button>\n            <button mat-button color=\"warn\">\n              Questions :{{ q.numberOfQuestions }}\n            </button>\n            <button mat-button color=\"warn\">M.M :{{ q.maxMarks }}</button>\n          </mat-card-action>\n        </mat-card>\n      </div>\n\n      <div class=\"col-md-12\" *ngIf=\"quizzes.length == 0\">\n        <mat-card>\n          <mat-card-content>\n            <h1>No data in this category</h1>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuizService } from 'src/app/services/quiz.service';\n\n@Component({\n  selector: 'app-load-quiz',\n  templateUrl: './load-quiz.component.html',\n  styleUrls: ['./load-quiz.component.css'],\n})\nexport class LoadQuizComponent implements OnInit {\n  catId;\n  quizzes;\n  constructor(private _route: ActivatedRoute, private _quiz: QuizService) {}\n\n  ngOnInit(): void {\n    this._route.params.subscribe((params) => {\n      this.catId = params.catId;\n      if (this.catId == 0) {\n        console.log('Load all the quiz');\n\n        this._quiz.getActiveQuizzes().subscribe(\n          (data: any) => {\n            this.quizzes = data;\n            console.log(this.quizzes);\n          },\n          (error) => {\n            console.log(error);\n            alert('error in loading all quizzes');\n          }\n        );\n      } else {\n        console.log('Load specific quiz');\n\n        this._quiz.getActiveQuizzesOfCategory(this.catId).subscribe(\n          (data: any) => {\n            this.quizzes = data;\n            console.log(this.quizzes);\n          },\n          (error) => {\n            alert('error in loading quiz data');\n          }\n        );\n      }\n    });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-quiz',\n  templateUrl: './add-quiz.component.html',\n  styleUrls: ['./add-quiz.component.css'],\n})\nexport class AddQuizComponent implements OnInit {\n  categories = [];\n\n  quizData = {\n    title: '',\n    description: '',\n    maxMarks: '',\n    numberOfQuestions: '',\n    active: true,\n    category: {\n      cid: '',\n    },\n  };\n\n  constructor(\n    private _cat: CategoryService,\n    private _snack: MatSnackBar,\n    private _quiz: QuizService\n  ) {}\n\n  ngOnInit(): void {\n    this._cat.categories().subscribe(\n      (data: any) => {\n        //categories load\n        this.categories = data;\n        // console.log(this.categories);\n      },\n\n      (error) => {\n        console.log(error);\n        Swal.fire('Error!!', 'error in loading data from server', 'error');\n      }\n    );\n  }\n  //\n  addQuiz() {\n    if (this.quizData.title.trim() == '' || this.quizData.title == null) {\n      this._snack.open('Title Required !!', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    //validation...\n\n    //call server\n    this._quiz.addQuiz(this.quizData).subscribe(\n      (data) => {\n        Swal.fire('Success', 'quiz is added', 'success');\n        this.quizData = {\n          title: '',\n          description: '',\n          maxMarks: '',\n          numberOfQuestions: '',\n          active: true,\n          category: {\n            cid: '',\n          },\n        };\n      },\n\n      (error) => {\n        Swal.fire('Error!! ', 'Error while adding quiz', 'error');\n        console.log(error);\n      }\n    );\n  }\n}\n","<mat-card>\n  <h1>Add New Quiz</h1>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\">\n        <form (ngSubmit)=\"addQuiz()\">\n          <!-- title field  -->\n          <mat-form-field class=\"w100\" appearance=\"fill\">\n            <mat-label>Enter Title</mat-label>\n            <input\n              [(ngModel)]=\"quizData.title\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Enter here\"\n              matInput\n              required\n            />\n          </mat-form-field>\n\n          <!-- description field  -->\n\n          <mat-form-field class=\"w100\" appearance=\"fill\">\n            <mat-label>Enter Description </mat-label>\n            <textarea\n              [(ngModel)]=\"quizData.description\"\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Enter here\"\n              matInput\n              rows=\"5\"\n            ></textarea>\n          </mat-form-field>\n\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <!-- //max marks -->\n              <mat-form-field class=\"w100\" appearance=\"fill\">\n                <mat-label>Maximum Marks</mat-label>\n                <input\n                  [(ngModel)]=\"quizData.maxMarks\"\n                  type=\"text\"\n                  name=\"maxMarks\"\n                  placeholder=\"Enter here\"\n                  matInput\n                />\n              </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n              <!-- number of question to be shown  -->\n              <mat-form-field class=\"w100\" appearance=\"fill\">\n                <mat-label>Number of Question</mat-label>\n                <input\n                  [(ngModel)]=\"quizData.numberOfQuestions\"\n                  type=\"text\"\n                  name=\"numberOfQuestions\"\n                  placeholder=\"Enter here\"\n                  matInput\n                />\n              </mat-form-field>\n            </div>\n          </div>\n\n          <!-- active field   -->\n\n          <mat-slide-toggle\n            name=\"active\"\n            [(ngModel)]=\"quizData.active\"\n            class=\"mt20\"\n          >\n            Publish Status\n          </mat-slide-toggle>\n\n          <br />\n          <!-- //category select  -->\n          <mat-form-field appearance=\"fill\" class=\"mt20 w100\">\n            <mat-label>Categories</mat-label>\n            <mat-select name=\"category\" [(ngModel)]=\"quizData.category.cid\">\n              <mat-option *ngFor=\"let c of categories\" [value]=\"c.cid\">\n                {{ c.title }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <div class=\"container text-center\">\n            <button mat-raised-button color=\"warn\" type=\"submit\">Add</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</mat-card>\n\n<!-- {{ quizData | json }} -->\n","import {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest,\r\n  HTTP_INTERCEPTORS,\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LoginService } from './login.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  constructor(private login: LoginService) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    //add the jwt token (localStorage) request\r\n    let authReq = req;\r\n    const token = this.login.getToken();\r\n    console.log('inside interceptor');\r\n\r\n    if (token != null) {\r\n      authReq = authReq.clone({\r\n        setHeaders: { Authorization: `Bearer ${token}` },\r\n      });\r\n    }\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n\r\nexport const authInterceptorProviders = [\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true,\r\n  },\r\n];\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\n\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css'],\n})\nexport class LoginComponent implements OnInit {\n  loginData = {\n    username: '',\n    password: '',\n  };\n\n  constructor(\n    private snack: MatSnackBar,\n    private login: LoginService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {}\n\n  formSubmit() {\n    console.log('login btn clicked');\n\n    if (\n      this.loginData.username.trim() == '' ||\n      this.loginData.username == null\n    ) {\n      this.snack.open('Username is required !! ', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (\n      this.loginData.password.trim() == '' ||\n      this.loginData.password == null\n    ) {\n      this.snack.open('Password is required !! ', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    //request to server to generate token\n    this.login.generateToken(this.loginData).subscribe(\n      (data: any) => {\n        console.log('success');\n        console.log(data);\n\n        //login...\n        this.login.loginUser(data.token);\n\n        this.login.getCurrentUser().subscribe((user: any) => {\n          this.login.setUser(user);\n          console.log(user);\n          //redirect ...ADMIN: admin-dashboard\n          //redirect ...NORMAL:normal-dashboard\n          if (this.login.getUserRole() == 'ADMIN') {\n            //admin dashboard\n            // window.location.href = '/admin';\n            this.router.navigate(['admin']);\n            this.login.loginStatusSubject.next(true);\n          } else if (this.login.getUserRole() == 'NORMAL') {\n            //normal user dashbaord\n            // window.location.href = '/user-dashboard';\n            this.router.navigate(['user-dashboard/0']);\n            this.login.loginStatusSubject.next(true);\n          } else {\n            this.login.logout();\n          }\n        });\n      },\n      (error) => {\n        console.log('Error !');\n        console.log(error);\n        this.snack.open('Invalid Details !! Try again', '', {\n          duration: 3000,\n        });\n      }\n    );\n  }\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <mat-card>\n          <div class=\"container text-center\">\n            <img src=\"../../../assets/logo.png\" alt=\"\" />\n          </div>\n\n          <h1 class=\"text-center\"style=\"color:rgb(62, 157, 7);\">Login Here !</h1>\n\n          <!-- {{ loginData | json }} -->\n          <form (ngSubmit)=\"formSubmit()\">\n            <!-- username field -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>User Name</mat-label>\n              <input\n                [(ngModel)]=\"loginData.username\"\n                name=\"username\"\n                required\n                matInput\n                placeholder=\"Enter here\"\n              />\n              <mat-hint>Valid User Name</mat-hint>\n            </mat-form-field>\n\n            <!-- password field  -->\n\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>User Password</mat-label>\n              <input\n                [(ngModel)]=\"loginData.password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <div class=\"container text-center\">\n              <button mat-raised-button color=\"primary\" type=\"submit\">\n                Login\n              </button>\n              <button class=\"ml10\" mat-raised-button color=\"warn\">\n                Reset\n              </button>\n            </div>\n          </form>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport baseUrl from './helper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginService {\n  public loginStatusSubject = new Subject<boolean>();\n\n  constructor(private http: HttpClient) {}\n\n  //current user: which is loggedin\n  public getCurrentUser() {\n    return this.http.get(`${baseUrl}/current-user`);\n  }\n\n  //generate token\n\n  public generateToken(loginData: any) {\n    return this.http.post(`${baseUrl}/generate-token`, loginData);\n  }\n\n  //login user: set token in localStorage\n  public loginUser(token) {\n    localStorage.setItem('token', token);\n\n    return true;\n  }\n\n  //isLogin: user is logged in or not\n  public isLoggedIn() {\n    let tokenStr = localStorage.getItem('token');\n    if (tokenStr == undefined || tokenStr == '' || tokenStr == null) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  // logout : remove token from local storage\n  public logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    return true;\n  }\n\n  //get token\n  public getToken() {\n    return localStorage.getItem('token');\n  }\n\n  //set userDetail\n  public setUser(user) {\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  //getUser\n  public getUser() {\n    let userStr = localStorage.getItem('user');\n    if (userStr != null) {\n      return JSON.parse(userStr);\n    } else {\n      this.logout();\n      return null;\n    }\n  }\n\n  //get user role\n\n  public getUserRole() {\n    let user = this.getUser();\n    return user.authorities[0].authority;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>footer works!</p>\n","import { Component } from '@angular/core';\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'TestYourself';\n}\n","<ngx-ui-loader\n  fgsColor=\"#ff4081\"\n  pbColor=\"#ff4081\"\n  text=\"Please wait..\"\n  pbThickness=\"6\"\n  textColor=\"#ff4081\"\n></ngx-ui-loader>\n\n<div ngxUiLoaderBlurred blur=\"6\">\n  <app-navbar></app-navbar>\n\n  <!-- dynamic content -->\n  <router-outlet></router-outlet>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport baseUrl from './helper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuestionService {\n  constructor(private _http: HttpClient) {}\n\n  public getQuestionsOfQuiz(qid) {\n    return this._http.get(`${baseUrl}/question/quiz/all/${qid}`);\n  }\n\n  public getQuestionsOfQuizForTest(qid) {\n    return this._http.get(`${baseUrl}/question/quiz/${qid}`);\n  }\n\n  //add question\n  public addQuestion(question) {\n    return this._http.post(`${baseUrl}/question/`, question);\n  }\n  //delete question\n  public deleteQuestion(questionId) {\n    return this._http.delete(`${baseUrl}/question/${questionId}`);\n  }\n\n  //eval quiz\n  public evalQuiz(questions) {\n    return this._http.post(`${baseUrl}/question/eval-quiz`, questions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-add-category',\n  templateUrl: './add-category.component.html',\n  styleUrls: ['./add-category.component.css'],\n})\nexport class AddCategoryComponent implements OnInit {\n  category = {\n    title: '',\n    description: '',\n  };\n\n  constructor(\n    private _category: CategoryService,\n    private _snack: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {}\n\n  formSubmit() {\n    if (this.category.title.trim() == '' || this.category.title == null) {\n      this._snack.open('Title Required !!', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    //all done\n\n    this._category.addCategory(this.category).subscribe(\n      (data: any) => {\n        this.category.title = '';\n        this.category.description = '';\n        Swal.fire('Success !!', 'Category is added successfuly', 'success');\n      },\n      (error) => {\n        console.log(error);\n        Swal.fire('Error !!', 'Server error !!', 'error');\n      }\n    );\n  }\n}\n","<mat-card>\n  <h1>Add New Category</h1>\n\n  <mat-card-content>\n    <div class=\"bootstrap-wrapper\">\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\">\n          <form (ngSubmit)=\"formSubmit()\">\n            <mat-form-field class=\"w100\" appearance=\"outline\">\n              <mat-label>Title</mat-label>\n\n              <input\n                required\n                autofocus\n                type=\"text\"\n                name=\"title\"\n                matInput\n                placeholder=\"Enter here\"\n                [(ngModel)]=\"category.title\"\n              />\n            </mat-form-field>\n\n            <mat-form-field class=\"w100\" appearance=\"outline\">\n              <mat-label>Description</mat-label>\n\n              <textarea\n                name=\"description\"\n                matInput\n                placeholder=\"Enter Category Description\"\n                [(ngModel)]=\"category.description\"\n                rows=\"15\"\n              ></textarea>\n            </mat-form-field>\n\n            <div class=\"container text-center mt15\">\n              <button mat-raised-button color=\"warn\">Add</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </mat-card-content>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NormalGuard implements CanActivate {\n  constructor(private login: LoginService, private router: Router) {}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.login.isLoggedIn() && this.login.getUserRole() == 'NORMAL') {\n      return true;\n    }\n\n    this.router.navigate(['login']);\n    return false;\n  }\n}\n","<mat-card *ngIf=\"user\">\n  <h1>Your Profile Details</h1>\n  <!-- {{ user | json }} -->\n  <mat-card-content>\n    <div class=\"bootstrap-wrapper\">\n      <div class=\"container\">\n        <div class=\"container text-center\">\n          <img\n            src=\"https://t4.ftcdn.net/jpg/03/46/93/61/360_F_346936114_RaxE6OQogebgAWTalE1myseY1Hbb5qPM.jpg\"\n            alt=\"\"\n            class=\"profile-image\"\n          />\n\n          <h1 class=\"mt20\">{{ user.firstName }} {{ user.lastName }}</h1>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-md-10 offset-md-1\">\n            <!-- //table Details  -->\n            <table class=\"table text-center\">\n              <tr>\n                <td>Username</td>\n                <td>{{ user.username }}</td>\n              </tr>\n              <tr>\n                <td>Userid</td>\n                <td>EXAM{{ user.id }}</td>\n              </tr>\n              <tr>\n                <td>Phone</td>\n                <td>{{ user.phone }}</td>\n              </tr>\n              <tr>\n                <td>Role</td>\n                <td>{{ user.authorities[0].authority }}</td>\n              </tr>\n              <tr>\n                <td>Status</td>\n                <td>{{ user.enabled ? \"ACTIVE\" : \"NOTACTIVE\" }}</td>\n              </tr>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </mat-card-content>\n  <mat-card-actions class=\"text-center\">\n    <button mat-raised-button color=\"primary\">UPDATE</button>\n    <button mat-raised-button color=\"warn\">SHARE</button>\n  </mat-card-actions>\n</mat-card>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n})\nexport class ProfileComponent implements OnInit {\n  user = null;\n  constructor(private login: LoginService) {}\n\n  ngOnInit(): void {\n    this.user = this.login.getUser();\n    // this.login.getCurrentUser().subscribe(\n    //   (user: any) => {\n    //     this.user = user;\n    //   },\n    //   (error) => {\n    //     alert('error');\n    //   }\n    // );\n  }\n}\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatButtonModule } from '@angular/material/button';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { HomeComponent } from './pages/home/home.component';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { authInterceptorProviders } from './services/auth.interceptor';\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { MatListModule } from '@angular/material/list';\nimport { SidebarComponent } from './pages/admin/sidebar/sidebar.component';\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\nimport { ViewCategoriesComponent } from './pages/admin/view-categories/view-categories.component';\nimport { AddCategoryComponent } from './pages/admin/add-category/add-category.component';\nimport { ViewQuizzesComponent } from './pages/admin/view-quizzes/view-quizzes.component';\nimport { AddQuizComponent } from './pages/admin/add-quiz/add-quiz.component';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSelectModule } from '@angular/material/select';\nimport { UpdateQuizComponent } from './pages/admin/update-quiz/update-quiz.component';\nimport { ViewQuizQuestionsComponent } from './pages/admin/view-quiz-questions/view-quiz-questions.component';\nimport { AddQuestionComponent } from './pages/admin/add-question/add-question.component';\nimport { CKEditorModule } from '@ckeditor/ckeditor5-angular';\n\nimport { SidebarComponent as UserSidebar } from './pages/user/sidebar/sidebar.component';\nimport { LoadQuizComponent } from './pages/user/load-quiz/load-quiz.component';\nimport { InstructionsComponent } from './pages/user/instructions/instructions.component';\nimport { StartComponent } from './pages/user/start/start.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { NgxUiLoaderHttpModule, NgxUiLoaderModule } from 'ngx-ui-loader';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    FooterComponent,\n    SignupComponent,\n    LoginComponent,\n    HomeComponent,\n    DashboardComponent,\n    UserDashboardComponent,\n    ProfileComponent,\n    SidebarComponent,\n    WelcomeComponent,\n    ViewCategoriesComponent,\n    AddCategoryComponent,\n    ViewQuizzesComponent,\n    AddQuizComponent,\n    UpdateQuizComponent,\n    ViewQuizQuestionsComponent,\n    AddQuestionComponent,\n    UserSidebar,\n    LoadQuizComponent,\n    InstructionsComponent,\n    StartComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatButtonModule,\n    MatInputModule,\n    MatFormFieldModule,\n    FormsModule,\n    HttpClientModule,\n    MatSnackBarModule,\n    MatCardModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatListModule,\n    MatSlideToggleModule,\n    MatSelectModule,\n    CKEditorModule,\n    MatProgressSpinnerModule,\n    NgxUiLoaderModule,\n    NgxUiLoaderHttpModule.forRoot({\n      showForeground: true,\n    }),\n  ],\n  providers: [authInterceptorProviders],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-dashboard',\n  templateUrl: './user-dashboard.component.html',\n  styleUrls: ['./user-dashboard.component.css']\n})\nexport class UserDashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n        <app-sidebar-user></app-sidebar-user>\n      </div>\n\n      <div class=\"col-md-10\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1>Welcome to ADMIN Panel</h1>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport baseUrl from './helper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CategoryService {\n  constructor(private _http: HttpClient) {}\n  //load all the cateogries\n  public categories() {\n    return this._http.get(`${baseUrl}/category/`);\n  }\n\n  //add new category\n  public addCategory(category) {\n    return this._http.post(`${baseUrl}/category/`, category);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryService } from 'src/app/services/category.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-view-categories',\n  templateUrl: './view-categories.component.html',\n  styleUrls: ['./view-categories.component.css'],\n})\nexport class ViewCategoriesComponent implements OnInit {\n  categories = [];\n\n  constructor(private _category: CategoryService) {}\n\n  ngOnInit(): void {\n    this._category.categories().subscribe(\n      (data: any) => {\n        //css\n        this.categories = data;\n        console.log(this.categories);\n      },\n\n      (error) => {\n        //\n        console.log(error);\n        Swal.fire('Error !!', 'Error in loading data', 'error');\n      }\n    );\n  }\n}\n","<mat-card>\n  <h1>All Categories</h1>\n  <mat-list>\n    <mat-list-item *ngFor=\"let c of categories\">\n      <mat-icon mat-list-icon>category</mat-icon>\n      <div mat-line>{{ c.title }}</div>\n      <div mat-line>{{ c.description }}</div>\n      <mat-divider></mat-divider>\n    </mat-list-item>\n  </mat-list>\n\n  <div class=\"container text-center mt20\">\n    <button routerLink=\"/admin/add-category\" mat-raised-button color=\"warn\">\n      Add New Category\n    </button>\n  </div>\n</mat-card>\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { LoginService } from './login.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AdminGuard implements CanActivate {\n  constructor(private login: LoginService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ):\n    | Observable<boolean | UrlTree>\n    | Promise<boolean | UrlTree>\n    | boolean\n    | UrlTree {\n    if (this.login.isLoggedIn() && this.login.getUserRole() == 'ADMIN') {\n      return true;\n    }\n\n    this.router.navigate(['login']);\n\n    return false;\n  }\n}\n","<!-- <h1>this is navbar</h1> -->\n<mat-toolbar color=\"warn\">\n  <a\n    routerLink=\"/\"\n    mat-icon-button\n    class=\"example-icon\"\n    aria-label=\"Example icon-button with menu icon\"\n  >\n    <mat-icon>desktop_mac</mat-icon>\n  </a>\n  <span>Examportal</span>\n  <span class=\"example-spacer\"></span>\n  <a\n    *ngIf=\"!isLoggedIn\"\n    [routerLink]=\"'/login'\"\n    mat-icon-button\n    class=\"example-icon favorite-icon\"\n    aria-label=\"Example icon-button with heart icon\"\n  >\n    Login\n  </a>\n\n  <a\n    *ngIf=\"!isLoggedIn\"\n    [routerLink]=\"'/signup'\"\n    mat-icon-button\n    class=\"example-icon favorite-icon mr20 ml20\"\n    aria-label=\"Example icon-button with heart icon\"\n  >\n    Register\n  </a>\n\n  <a\n    (click)=\"logout()\"\n    *ngIf=\"isLoggedIn\"\n    mat-icon-button\n    class=\"example-icon favorite-icon mr20 ml20\"\n    aria-label=\"Example icon-button with heart icon\"\n  >\n    Logout\n  </a>\n\n  <button\n    *ngIf=\"isLoggedIn && user\"\n    class=\"example-icon favorite-icon ml20\"\n    mat-button\n    routerLink=\"/admin/profile\"\n    aria-label=\"Example icon-button with heart icon\"\n  >\n    {{ user.username }}\n  </button>\n</mat-toolbar>\n","import { ThrowStmt } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { LoginService } from 'src/app/services/login.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css'],\n})\nexport class NavbarComponent implements OnInit {\n  isLoggedIn = false;\n  user = null;\n\n  constructor(public login: LoginService) {}\n\n  ngOnInit(): void {\n    this.isLoggedIn = this.login.isLoggedIn();\n    this.user = this.login.getUser();\n    this.login.loginStatusSubject.asObservable().subscribe((data) => {\n      this.isLoggedIn = this.login.isLoggedIn();\n      this.user = this.login.getUser();\n    });\n  }\n\n  public logout() {\n    this.login.logout();\n    window.location.reload();\n    // this.login.loginStatusSubject.next(false);\n  }\n}\n","<mat-card>\n  <mat-action-list>\n    <div mat-subheader>Available Categories</div>\n\n    <button mat-list-item routerLink=\"/user-dashboard/0\">\n      <mat-icon mat-list-icon>quiz</mat-icon> All Quizzes\n    </button>\n    <button\n      [routerLink]=\"'/user-dashboard/' + c.cid\"\n      mat-list-item\n      *ngFor=\"let c of categories\"\n    >\n      <mat-icon mat-list-icon>quiz</mat-icon> {{ c.title }}\n    </button>\n  </mat-action-list>\n</mat-card>\n<!-- {{ categories | json }} -->\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-sidebar-user',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n})\nexport class SidebarComponent implements OnInit {\n  categories;\n  constructor(private _cat: CategoryService, private _snack: MatSnackBar) {}\n\n  ngOnInit(): void {\n    this._cat.categories().subscribe(\n      (data: any) => {\n        this.categories = data;\n      },\n      (error) => {\n        this._snack.open('Error in loading categories from server', '', {\n          duration: 3000,\n        });\n      }\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-update-quiz',\n  templateUrl: './update-quiz.component.html',\n  styleUrls: ['./update-quiz.component.css'],\n})\nexport class UpdateQuizComponent implements OnInit {\n  constructor(\n    private _route: ActivatedRoute,\n    private _quiz: QuizService,\n    private _cat: CategoryService,\n    private _router: Router\n  ) {}\n\n  qId = 0;\n  quiz;\n  categories;\n\n  ngOnInit(): void {\n    this.qId = this._route.snapshot.params.qid;\n    // alert(this.qId);\n    this._quiz.getQuiz(this.qId).subscribe(\n      (data: any) => {\n        this.quiz = data;\n        console.log(this.quiz);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n\n    this._cat.categories().subscribe(\n      (data: any) => {\n        this.categories = data;\n      },\n      (error) => {\n        alert('error in loading categories');\n      }\n    );\n  }\n\n  //update form submit\n  public updateData() {\n    //validatate\n\n    this._quiz.updateQuiz(this.quiz).subscribe(\n      (data) => {\n        Swal.fire('Success !!', 'quiz updated', 'success').then((e) => {\n          this._router.navigate(['/admin/quizzes']);\n        });\n      },\n      (error) => {\n        Swal.fire('Error', 'error in updating quiz', 'error');\n        console.log(error);\n      }\n    );\n  }\n}\n","<mat-card>\n  <h1>Update Quiz Quiz</h1>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\">\n        <form *ngIf=\"quiz\" (submit)=\"updateData()\">\n          <!-- title field  -->\n          <mat-form-field class=\"w100\" appearance=\"fill\">\n            <mat-label>Enter Title</mat-label>\n            <input\n              [(ngModel)]=\"quiz.title\"\n              type=\"text\"\n              name=\"title\"\n              placeholder=\"Enter here\"\n              matInput\n              required\n            />\n          </mat-form-field>\n\n          <!-- description field  -->\n\n          <mat-form-field class=\"w100\" appearance=\"fill\">\n            <mat-label>Enter Description </mat-label>\n            <textarea\n              [(ngModel)]=\"quiz.description\"\n              type=\"text\"\n              name=\"description\"\n              placeholder=\"Enter here\"\n              matInput\n              rows=\"5\"\n            ></textarea>\n          </mat-form-field>\n\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <!-- //max marks -->\n              <mat-form-field class=\"w100\" appearance=\"fill\">\n                <mat-label>Maximum Marks</mat-label>\n                <input\n                  [(ngModel)]=\"quiz.maxMarks\"\n                  type=\"text\"\n                  name=\"maxMarks\"\n                  placeholder=\"Enter here\"\n                  matInput\n                />\n              </mat-form-field>\n            </div>\n            <div class=\"col-md-6\">\n              <!-- number of question to be shown  -->\n              <mat-form-field class=\"w100\" appearance=\"fill\">\n                <mat-label>Number of Question</mat-label>\n                <input\n                  [(ngModel)]=\"quiz.numberOfQuestions\"\n                  type=\"text\"\n                  name=\"numberOfQuestions\"\n                  placeholder=\"Enter here\"\n                  matInput\n                />\n              </mat-form-field>\n            </div>\n          </div>\n\n          <!-- active field   -->\n\n          <mat-slide-toggle\n            name=\"active\"\n            [(ngModel)]=\"quiz.active\"\n            class=\"mt20\"\n          >\n            Publish Status\n          </mat-slide-toggle>\n\n          <br />\n          <!-- //category select  -->\n          <mat-form-field appearance=\"fill\" class=\"mt20 w100\">\n            <mat-label>Categories</mat-label>\n            <mat-select name=\"category\" [(ngModel)]=\"quiz.category.cid\">\n              <mat-option *ngFor=\"let c of categories\" [value]=\"c.cid\">\n                {{ c.title }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n\n          <div class=\"container text-center\">\n            <button mat-raised-button color=\"accent\" type=\"submit\">\n              Update\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</mat-card>\n\n<!-- {{ quiz | json }} -->\n","let baseUrl = 'http://localhost:8080';\r\nexport default baseUrl;\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from 'src/app/services/user.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css'],\n})\nexport class SignupComponent implements OnInit {\n  constructor(private userService: UserService, private snack: MatSnackBar) {}\n\n  public user = {\n    username: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n    email: '',\n    phone: '',\n  };\n\n  ngOnInit(): void {}\n\n  formSubmit() {\n    console.log(this.user);\n    if (this.user.username == '' || this.user.username == null) {\n      // alert('User is required !!');\n      this.snack.open('Username is required !! ', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    if (this.user.password == '' || this.user.password == null) {\n      // alert('User is required !!');\n      this.snack.open('Password is required !! ', '', {\n        duration: 3000,\n      });\n      return;\n    }\n\n    //validate\n\n    //addUser: userservice\n    this.userService.addUser(this.user).subscribe(\n      (data: any) => {\n        //success\n        console.log(data);\n        //alert('success');\n        Swal.fire('Successfully done !!', 'User id is ' + data.id, 'success');\n      },\n      (error) => {\n        //error\n        console.log(error);\n        // alert('something went wrong');\n        this.snack.open(error.error.text, '', {\n          duration: 3000,\n        });\n      }\n    );\n  }\n\n  //this.user\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-6 offset-md-3\">\n        <mat-card>\n          <div class=\"container text-center\">\n            <img src=\"../../../assets/logo.png\" alt=\"\" />\n          </div>\n\n          <h1 class=\"text-center\" style=\"color:rgb(62, 157, 7);\">Register Here !</h1>\n\n          <!-- {{ user | json }} -->\n\n          <form (ngSubmit)=\"formSubmit()\">\n            <!-- Username field -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>User Name</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.username\"\n                name=\"username\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n              <mat-hint>Username must be unique !!</mat-hint>\n            </mat-form-field>\n\n            <!-- Password field -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>User Password</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.password\"\n                name=\"password\"\n                type=\"password\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <!-- first name  -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>First Name</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.firstName\"\n                name=\"firstName\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <!-- lastname -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>Last Name</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.lastName\"\n                name=\"lastName\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <!-- email -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>Email Address</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.email\"\n                name=\"email\"\n                type=\"email\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <!-- phone number -->\n            <mat-form-field class=\"full-width\" appearance=\"outline\">\n              <mat-label>Phone Number</mat-label>\n              <input\n                required\n                [(ngModel)]=\"user.phone\"\n                name=\"phone\"\n                type=\"number\"\n                matInput\n                placeholder=\"Enter here\"\n              />\n            </mat-form-field>\n\n            <div class=\"container text-center\">\n              <button type=\"submit\" mat-raised-button color=\"primary\">\n                Register\n              </button>\n              <button\n                type=\"button\"\n                style=\"margin-left: 20px\"\n                mat-raised-button\n                color=\"warn\"\n              >\n                Clear\n              </button>\n            </div>\n          </form>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport baseUrl from './helper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class QuizService {\n  constructor(private _http: HttpClient) {}\n\n  public quizzes() {\n    return this._http.get(`${baseUrl}/quiz/`);\n  }\n\n  //add quiz\n  public addQuiz(quiz) {\n    return this._http.post(`${baseUrl}/quiz/`, quiz);\n  }\n\n  //delete quiz\n  public deleteQuiz(qId) {\n    return this._http.delete(`${baseUrl}/quiz/${qId}`);\n  }\n\n  //get the single quiz\n\n  public getQuiz(qId) {\n    return this._http.get(`${baseUrl}/quiz/${qId}`);\n  }\n\n  //update quiz\n  public updateQuiz(quiz) {\n    return this._http.put(`${baseUrl}/quiz/`, quiz);\n  }\n\n  //get quizzes of category\n  public getQuizzesOfCategory(cid) {\n    return this._http.get(`${baseUrl}/quiz/category/${cid}`);\n  }\n  //qet active quizzes\n  public getActiveQuizzes() {\n    return this._http.get(`${baseUrl}/quiz/active`);\n  }\n\n  //get active quizzes of category\n  public getActiveQuizzesOfCategory(cid) {\n    return this._http.get(`${baseUrl}/quiz/category/active/${cid}`);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport baseUrl from './helper';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  constructor(private http: HttpClient) {}\n\n  //add user\n\n  public addUser(user: any) {\n    return this.http.post(`${baseUrl}/user/`, user);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"bootstrap-wrapper\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n        <app-sidebar></app-sidebar>\n      </div>\n\n      <div class=\"col-md-10\">\n        <router-outlet></router-outlet>\n      </div>\n    </div>\n  </div>\n</div>\n","import { LocationStrategy } from '@angular/common';\nimport { ThisReceiver } from '@angular/compiler';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuestionService } from 'src/app/services/question.service';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-start',\n  templateUrl: './start.component.html',\n  styleUrls: ['./start.component.css'],\n})\nexport class StartComponent implements OnInit {\n  qid;\n  questions;\n\n  marksGot = 0;\n  correctAnswers = 0;\n  attempted = 0;\n\n  isSubmit = false;\n\n  timer: any;\n\n  constructor(\n    private locationSt: LocationStrategy,\n    private _route: ActivatedRoute,\n    private _question: QuestionService,\n    private _quiz: QuizService\n  ) {}\n\n  ngOnInit(): void {\n    this.preventBackButton();\n    this.qid = this._route.snapshot.params.qid;\n    console.log(this.qid);\n    this.loadQuestions();\n  }\n  loadQuestions() {\n    this._question.getQuestionsOfQuizForTest(this.qid).subscribe(\n      (data: any) => {\n        this.questions = data;\n\n        this.timer = this.questions.length * 2 * 60;\n\n        console.log(this.questions);\n        this.startTimer();\n      },\n\n      (error) => {\n        console.log(error);\n        Swal.fire('Error', 'Error in loading questions of quiz', 'error');\n      }\n    );\n  }\n\n  preventBackButton() {\n    history.pushState(null, null, location.href);\n    this.locationSt.onPopState(() => {\n      history.pushState(null, null, location.href);\n    });\n  }\n\n  submitQuiz() {\n    Swal.fire({\n      title: 'Do you want to submit the quiz?',\n      showCancelButton: true,\n      confirmButtonText: `Submit`,\n      icon: 'info',\n    }).then((e) => {\n      if (e.isConfirmed) {\n        this.evalQuiz();\n      }\n    });\n  }\n\n  startTimer() {\n    let t = window.setInterval(() => {\n      //code\n      if (this.timer <= 0) {\n        this.evalQuiz();\n        clearInterval(t);\n      } else {\n        this.timer--;\n      }\n    }, 1000);\n  }\n\n  getFormattedTime() {\n    let mm = Math.floor(this.timer / 60);\n    let ss = this.timer - mm * 60;\n    return `${mm} min : ${ss} sec`;\n  }\n\n  evalQuiz() {\n    //calculation\n    //call to sever  to check questions\n    this._question.evalQuiz(this.questions).subscribe(\n      (data: any) => {\n        console.log(data);\n        this.marksGot = data.marksGot;\n        this.correctAnswers = data.correctAnswers;\n        this.attempted = data.attempted;\n        this.isSubmit = true;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n    // this.isSubmit = true;\n    // this.questions.forEach((q) => {\n    //   if (q.givenAnswer == q.answer) {\n    //     this.correctAnswers++;\n    //     let marksSingle =\n    //       this.questions[0].quiz.maxMarks / this.questions.length;\n    //     this.marksGot += marksSingle;\n    //   }\n    //   if (q.givenAnswer.trim() != '') {\n    //     this.attempted++;\n    //   }\n    // });\n    // console.log('Correct Answers :' + this.correctAnswers);\n    // console.log('Marks Got ' + this.marksGot);\n    // console.log('attempted ' + this.attempted);\n    // console.log(this.questions);\n  }\n}\n","<div class=\"bootstrap-wrapper\" *ngIf=\"!isSubmit\">\n  <div class=\"container-fluid\">\n    <div class=\"row\">\n      <div class=\"col-md-2\">\n        <!-- instructions -->\n        <h3>instructions</h3>\n      </div>\n      <div class=\"col-md-8\">\n        <!-- questions -->\n        <ng-container *ngIf=\"questions\">\n          <h1 class=\"mt20\">\n            On Going Quiz <b>{{ questions[0].quiz.title }}</b>\n          </h1>\n        </ng-container>\n\n        <mat-card *ngFor=\"let q of questions; let i = index\" class=\"mt10\">\n          <mat-card-content>\n            <p>\n              <b>Q {{ i + 1 }})</b>\n              <span class=\"ml10\" [innerHTML]=\"q.content\"></span>\n            </p>\n\n            <mat-divider> </mat-divider>\n            <br />\n\n            <div class=\"row mt20\">\n              <div class=\"col-md-6\">\n                <input\n                  type=\"radio\"\n                  [value]=\"q.option1\"\n                  [name]=\"i\"\n                  [(ngModel)]=\"q.givenAnswer\"\n                />{{ q.option1 }}\n              </div>\n              <div class=\"col-md-6\">\n                <input\n                  type=\"radio\"\n                  [value]=\"q.option2\"\n                  [name]=\"i\"\n                  [(ngModel)]=\"q.givenAnswer\"\n                />{{ q.option2 }}\n              </div>\n            </div>\n\n            <div class=\"row mt20\">\n              <div class=\"col-md-6\">\n                <input\n                  type=\"radio\"\n                  [value]=\"q.option3\"\n                  [name]=\"i\"\n                  [(ngModel)]=\"q.givenAnswer\"\n                />{{ q.option3 }}\n              </div>\n              <div class=\"col-md-6\">\n                <input\n                  type=\"radio\"\n                  [value]=\"q.option4\"\n                  [name]=\"i\"\n                  [(ngModel)]=\"q.givenAnswer\"\n                />{{ q.option4 }}\n              </div>\n            </div>\n          </mat-card-content>\n        </mat-card>\n\n        <div class=\"container text-center mt20 mb20\">\n          <button (click)=\"submitQuiz()\" mat-raised-button color=\"primary\">\n            Submit Quiz\n          </button>\n        </div>\n      </div>\n      <div class=\"col-md-2\">\n        <!-- progress -->\n\n        <mat-card style=\"margin-top: 70px\">\n          <mat-card-header>\n            <mat-card-title> Progress </mat-card-title>\n            <mat-card-subtitle>\n              Quiz will automatically submitted when timer reaches to <b>0:0</b>\n            </mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-content>\n            <h1 class=\"text-center\">{{ getFormattedTime() }}</h1>\n            <mat-spinner\n              mode=\"determinate\"\n              color=\"warn\"\n              style=\"margin: auto\"\n              [value]=\"(timer / (this.questions.length * 2 * 60)) * 100\"\n            ></mat-spinner>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- show the result -->\n<div class=\"bootstrap-wrapper\" *ngIf=\"isSubmit\">\n  <div class=\"row mt20\">\n    <div class=\"col-md-6 offset-md-3\">\n      <mat-card>\n        <mat-card-header>\n          <mat-card-title> Quiz Result </mat-card-title>\n        </mat-card-header>\n        <mat-card-content class=\"text-center\">\n          <h1>Marks Got : {{ marksGot }}</h1>\n          <h1>Correct Answers : {{ correctAnswers }}</h1>\n          <h1>Questions Attempted :{{ attempted }}</h1>\n        </mat-card-content>\n        <mat-card-actions class=\"text-center\">\n          <button mat-raised-button color=\"primary\">Print</button>\n          <button\n            mat-raised-button\n            color=\"warn\"\n            [routerLink]=\"'/user-dashboard/0'\"\n          >\n            Home\n          </button>\n        </mat-card-actions>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { QuizService } from 'src/app/services/quiz.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-view-quizzes',\n  templateUrl: './view-quizzes.component.html',\n  styleUrls: ['./view-quizzes.component.css'],\n})\nexport class ViewQuizzesComponent implements OnInit {\n  quizzes = [];\n\n  constructor(private _quiz: QuizService) {}\n\n  ngOnInit(): void {\n    this._quiz.quizzes().subscribe(\n      (data: any) => {\n        this.quizzes = data;\n        console.log(this.quizzes);\n      },\n      (error) => {\n        console.log(error);\n        Swal.fire('Error !', 'Error in loading data !', 'error');\n      }\n    );\n  }\n\n  //\n  deleteQuiz(qId) {\n    Swal.fire({\n      icon: 'info',\n      title: 'Are you sure ?',\n      confirmButtonText: 'Delete',\n      showCancelButton: true,\n    }).then((result) => {\n      if (result.isConfirmed) {\n        //delete...\n\n        this._quiz.deleteQuiz(qId).subscribe(\n          (data) => {\n            this.quizzes = this.quizzes.filter((quiz) => quiz.qId != qId);\n            Swal.fire('Success', 'Quiz deleted ', 'success');\n          },\n          (error) => {\n            Swal.fire('Error', 'Error in deleting quiz', 'error');\n          }\n        );\n      }\n    });\n  }\n}\n","<mat-card class=\"mt10 mr20 ml20\" *ngFor=\"let q of quizzes\">\n  <mat-card-header>\n    <div mat-card-avatar class=\"example-header-image\"></div>\n    <mat-card-title>\n      {{ q.title }}\n    </mat-card-title>\n    <mat-card-subtitle>\n      {{ q.category.title }}\n    </mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <p>{{ q.description }}</p>\n  </mat-card-content>\n  <mat-card-action>\n    <button\n      [routerLink]=\"'/admin/view-questions/' + q.qId + '/' + q.title\"\n      mat-flat-button\n      color=\"warn\"\n    >\n      Questions\n    </button>\n    <button mat-stroked-button color=\"warn\" class=\"ml20\">\n      Max Marks: {{ q.maxMarks }}\n    </button>\n    <button mat-stroked-button color=\"warn\" class=\"ml20\">\n      Questions: {{ q.numberOfQuestions }}\n    </button>\n    <button\n      [routerLink]=\"'/admin/quiz/' + q.qId\"\n      mat-flat-button\n      color=\"warn\"\n      class=\"ml20\"\n    >\n      Update\n    </button>\n    <button mat-flat-button color=\"warn\" class=\"ml20\">Attempts</button>\n\n    <button\n      mat-flat-button\n      color=\"primary\"\n      class=\"ml10\"\n      (click)=\"deleteQuiz(q.qId)\"\n    >\n      Delete\n    </button>\n  </mat-card-action>\n</mat-card>\n\n<div class=\"container text-center mt20\">\n  <button routerLink=\"/admin/add-quiz\" mat-raised-button color=\"warn\">\n    Add New Quiz\n  </button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AddCategoryComponent } from './pages/admin/add-category/add-category.component';\nimport { AddQuestionComponent } from './pages/admin/add-question/add-question.component';\nimport { AddQuizComponent } from './pages/admin/add-quiz/add-quiz.component';\n\nimport { DashboardComponent } from './pages/admin/dashboard/dashboard.component';\nimport { UpdateQuizComponent } from './pages/admin/update-quiz/update-quiz.component';\nimport { ViewCategoriesComponent } from './pages/admin/view-categories/view-categories.component';\nimport { ViewQuizQuestionsComponent } from './pages/admin/view-quiz-questions/view-quiz-questions.component';\nimport { ViewQuizzesComponent } from './pages/admin/view-quizzes/view-quizzes.component';\nimport { WelcomeComponent } from './pages/admin/welcome/welcome.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { LoginComponent } from './pages/login/login.component';\nimport { ProfileComponent } from './pages/profile/profile.component';\nimport { SignupComponent } from './pages/signup/signup.component';\nimport { InstructionsComponent } from './pages/user/instructions/instructions.component';\nimport { LoadQuizComponent } from './pages/user/load-quiz/load-quiz.component';\nimport { StartComponent } from './pages/user/start/start.component';\nimport { UserDashboardComponent } from './pages/user/user-dashboard/user-dashboard.component';\nimport { AdminGuard } from './services/admin.guard';\nimport { NormalGuard } from './services/normal.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'signup',\n    component: SignupComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n    pathMatch: 'full',\n  },\n  {\n    path: 'admin',\n    component: DashboardComponent,\n    canActivate: [AdminGuard],\n    children: [\n      {\n        path: '',\n        component: WelcomeComponent,\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent,\n      },\n      {\n        path: 'categories',\n        component: ViewCategoriesComponent,\n      },\n      {\n        path: 'add-category',\n        component: AddCategoryComponent,\n      },\n      {\n        path: 'quizzes',\n        component: ViewQuizzesComponent,\n      },\n      {\n        path: 'add-quiz',\n        component: AddQuizComponent,\n      },\n      {\n        path: 'quiz/:qid',\n        component: UpdateQuizComponent,\n      },\n      {\n        path: 'view-questions/:qid/:title',\n        component: ViewQuizQuestionsComponent,\n      },\n      {\n        path: 'add-question/:qid/:title',\n        component: AddQuestionComponent,\n      },\n    ],\n  },\n  {\n    path: 'user-dashboard',\n    component: UserDashboardComponent,\n    canActivate: [NormalGuard],\n    children: [\n      {\n        path: ':catId',\n        component: LoadQuizComponent,\n      },\n      {\n        path: 'instructions/:qid',\n        component: InstructionsComponent,\n      },\n    ],\n  },\n  {\n    path: 'start/:qid',\n    component: StartComponent,\n    canActivate: [NormalGuard],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute } from '@angular/router';\nimport { QuestionService } from 'src/app/services/question.service';\nimport Swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-view-quiz-questions',\n  templateUrl: './view-quiz-questions.component.html',\n  styleUrls: ['./view-quiz-questions.component.css'],\n})\nexport class ViewQuizQuestionsComponent implements OnInit {\n  qId;\n  qTitle;\n  questions = [];\n\n  constructor(\n    private _route: ActivatedRoute,\n    private _question: QuestionService,\n    private _snak: MatSnackBar\n  ) {}\n\n  ngOnInit(): void {\n    this.qId = this._route.snapshot.params.qid;\n    this.qTitle = this._route.snapshot.params.title;\n    this._question.getQuestionsOfQuiz(this.qId).subscribe(\n      (data: any) => {\n        console.log(data);\n        this.questions = data;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  //delete quesion\n  deleteQuestion(qid) {\n    Swal.fire({\n      icon: 'info',\n      showCancelButton: true,\n      confirmButtonText: 'Delete',\n      title: 'Are you sure , want to delete this question?',\n    }).then((result) => {\n      if (result.isConfirmed) {\n        //confim\n        this._question.deleteQuestion(qid).subscribe(\n          (data) => {\n            this._snak.open('Question Deleted ', '', {\n              duration: 3000,\n            });\n            this.questions = this.questions.filter((q) => q.quesId != qid);\n          },\n\n          (error) => {\n            this._snak.open('Error in deleting questions', '', {\n              duration: 3000,\n            });\n            console.log(error);\n          }\n        );\n      }\n    });\n  }\n}\n","<h1 class=\"mt20\">Questions of {{ qTitle }}</h1>\n\n<div class=\"bootstrap-wrapper\">\n  <div class=\"row\">\n    <div class=\"col-md-12\">\n      <div class=\"container text-center\">\n        <button\n          mat-raised-button\n          color=\"warn\"\n          [routerLink]=\"'/admin/add-question/' + qId + '/' + qTitle\"\n        >\n          Add Question\n        </button>\n      </div>\n\n      <mat-card *ngFor=\"let q of questions; let i = index\" class=\"mt20\">\n        <mat-card-content>\n          <p>\n            <b> Q {{ i + 1 }})</b>\n            <span class=\"ml20\" [innerHTML]=\"q.content\"></span>\n          </p>\n\n          <div class=\"container-fluid\">\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <p><b>1)</b> {{ q.option1 }}</p>\n              </div>\n              <div class=\"col-md-6\">\n                <p><b>2)</b> {{ q.option2 }}</p>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-6\">\n                <p><b>3)</b> {{ q.option3 }}</p>\n              </div>\n              <div class=\"col-md-6\">\n                <p><b>4)</b> {{ q.option4 }}</p>\n              </div>\n            </div>\n            <mat-divider></mat-divider>\n            <p class=\"mt20\"><b>Correct Answer:</b> {{ q.answer }}</p>\n          </div>\n        </mat-card-content>\n\n        <mat-card-action>\n          <button mat-button (click)=\"deleteQuestion(q.quesId)\" color=\"primary\">\n            Delete\n          </button>\n          <button mat-button color=\"accent\">Update</button>\n        </mat-card-action>\n      </mat-card>\n    </div>\n  </div>\n</div>\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}